INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (1, 'Latitude', 'number', 'text','[]','latitude', 'Location latitude');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (2, 'Longitude', 'number', 'text','[]','longitude', 'Location longitude');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (3, 'Number of floors', 'number', 'text','[]','number_floor', 'Number of floors');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (4, 'Width floor', 'number', 'text','[]','width_floor', 'Building floor width');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (5, 'Length floor', 'number', 'text','[]','length_floor', 'Building floor length');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (6, 'Height floor', 'number', 'text','[]','height_floor', 'Building floors height');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (7, 'North facade wall ratio', 'number', 'text','[]','ratio_wall_N', 'Ratio of North wall area in the facade area (facade = wall + glass). Value between 0 and 1.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (8, 'South facade wall ratio', 'number', 'text','[]','ratio_wall_S', 'Ratio of South wall area in the facade area (facade = wall + glass). Value between 0 and 1.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (9, 'East facade wall ratio', 'number', 'text','[]','ratio_wall_E', 'Ratio of East wall area in the facade area (facade = wall + glass). Value between 0 and 1.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (10, 'West facade wall ratio', 'number', 'text','[]','ratio_wall_W', 'Ratio of West wall area in the facade area (facade = wall + glass). Value between 0 and 1.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (11, 'Saturday ON', 'number', 'select','{"options": [{"key": 1, "value": "yes"}, {"key": 0, "value": "No"}]}','saturday_on', 'If available/occupied on Saturday (stream/building). Daily periods assumed on Saturday');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (12, 'Sunday ON', 'number', 'select','{"options": [{"key": 1, "value": "yes"}, {"key": 0, "value": "No"}]}','sunday_on', 'If available/occupied on Sunday (stream/building). Daily periods assumed on Sunday');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (13, 'Shutdown periods', 'string', 'text','[]','shutdown_periods', 'Periods of days during the year the stream/building is not available/occupied. (e.g. [], [[1,12]] or [[200,231],[330,360]]. Pay attention to the brackets when introducing periods.) ');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (14, 'Daily periods', 'string', 'text','[]','daily_periods', 'Daily hourly periods stream/building is available/occupied. (e.g. [[0,12]] or [[9,12],[17,23]]). Pay attention to the brackets when introducing periods.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (15, 'Building type', 'string', 'select','{"options": [{"key": "office", "value": "office"}, {"key": "hotel", "value": "hotel"}, {"key": "residential", "value": "residential"}]}','building_type', 'Type of building. If residential, provide number of persons per floor (ADVANCED PROPERTIES). If hotel, provide number of rooms (ADVANCED PROPERTIES)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (16, 'Persons per floor', 'number', 'text','[]','number_person_per_floor', 'Average number of persons per floor. Mandatory input for residential buildings. For the hotel, DEFAULT=2*number_of_rooms; For the office, DEFAULT=area_floor/9');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (17, 'Number of rooms per floor', 'number', 'text','[]','number_rooms', 'Average number of rooms per floor; Mandatory input for hotel buildings.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (18, 'Space Heating Type', 'number', 'select','{"options": [{"key": 1, "value": "Conventional"}, {"key": 2, "value": "Low temperature"}, {"key": 3, "value": "Specify Temperatures - ADVANCED PROPERTIES"}]}','space_heating_type', 'Space heating working fluid temperature. Conventional: heaters fluid working at 75ºC-45ºC; Low temperature:heaters fluid working at 50ºC-30ºC. If Specify Temperatures -> modify: "Heating System Return Temperature" and "Heating System Supply Temperature"');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (19, 'Building Orientation', 'string', 'select','{"options": [{"key": "N", "value": "North"}, {"key": "S", "value": "South"}, {"key": "W", "value": "West"}, {"key": "E", "value": "East"}]}','building_orientation', 'Building’s main facade orientation');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (20, 'Persons per floor', 'number', 'text','[]','number_person_per_floor', 'Number of persons per floor');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (21, 'Heating System Return Temperature', 'number', 'text','[]','supply_temperature_heat', 'Heating System working fluid return temperature; Example: Conventional Heaters working at 75ºC/45ºC, supply temperaure = 75ºC and return temperature=45ºC');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (22, 'Heating System Supply Temperature', 'number', 'text','[]','target_temperature_heat', 'Heating System working fluid supply temperature; Example: Conventional Heaters working at 75ºC/45ºC, supply temperaure = 75ºC and return temperature=45ºC');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (23, 'Cooling System ReturnTemperature', 'number', 'text','[]','supply_temperature_cool', 'Cooling System working fluid return temperature;  Example: Coolers working at 7ºC/12ºC,  supply temperature=7ºC and return temperature = 12ºC.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (24, 'Cooling System Supply Temperature', 'number', 'text','[]','target_temperature_cool', 'Cooling System working fluid supply temperature;  Example: Coolers working at 7ºC/12ºC,  supply temperature=7ºC and return temperature = 12ºC.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (25, 'Cooling setpoint temperature', 'number', 'text','[]','T_cool_on', 'Indoor air maximum temperature during occupied hours; Cooling is turned on to hold this temperature (if there is no setpoint, leave empty)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (26, 'Heating setpoint temperature', 'number', 'text','[]','T_heat_on', 'Indoor air minimum temperature during occupied hours; Heating is turned on to hold this temperature (if there is no setpoint, leave empty)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (27, 'Heating setback setpoint temperature', 'number', 'text','[]','T_off_min', 'Indoor air minimum temperature during unnoccupied hours; Heating is turned on to hold this temperature (if there is no setpoint, leave empty)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (28, 'Cooling setback setpoint temperature ', 'number', 'text','[]','T_off_max', 'Indoor air maximum temperature during unnoccupied hours; Cooling is turned on to hold this temperature (if there is no setpoint, leave empty)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (29, 'Window transmissivity', 'number', 'text','[]','tau_glass', 'Window radiation transmissivity coefficient. DEFAULT=0.675');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (30, 'Walls absorption coef.', 'number', 'text','[]','alpha_wall', 'Wall radiation absorption coefficient. DEFAULT=0.5');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (31, 'Floor absorption coef.', 'number', 'text','[]','alpha_floor', 'Floor radiation absorption coefficient. DEFAULT=0.6');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (32, 'Windows absorption coef.', 'number', 'text','[]','alpha_glass', 'Window radiation absorption coefficient. DEFAULT=0.08');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (33, 'U wall', 'number', 'text','[]','u_wall', 'Wall heat transfer coefficient. DEFAULT= Varies with country ( from https://ec.europa.eu/energy/eu-buildings-database_en)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (34, 'U roof', 'number', 'text','[]','u_roof', 'Roof heat transfer coefficient. DEFAULT= Varies with country ( from https://ec.europa.eu/energy/eu-buildings-database_en)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (35, 'U floor', 'number', 'select','[]','u_floor', 'Floor heat transfer coefficient. DEFAULT= Varies with country ( from https://ec.europa.eu/energy/eu-buildings-database_en)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (36, 'U window', 'number', 'text','[]','u_glass', 'Window heat transfer coefficient. DEFAULT= Varies with country ( from https://ec.europa.eu/energy/eu-buildings-database_en)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (37, 'Roof cp', 'number', 'text','[]','cp_roof', 'Roof specific heat capacitance. DEFAULT=189120 [J/m2.K]');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (38, 'Wall cp', 'number', 'text','[]','cp_wall', 'Wall specific heat capacitance. DEFAULT=16615 [J/m2.K]');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (39, 'ACH', 'number', 'text','[]','air_change_hour', 'Air changes per hour due to infiltrations. DEFAULT=0.9');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (40, 'Renewal air per person', 'number', 'text','[]','renewal_air_per_person', 'Renewal fresh air per person. For offices, DEFAULT=10*10^(-3) ; for the remaining building types DEFAULT=0 [m^3/s per person]');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (41, 'Consumption DHW', 'number', 'text','[]','vol_dhw_set', 'Volume of daily hot water consumption per person. For offices, DEFAULT=0.003 * number_person_per_floor; for the remaining building types DEFAULT=0.03*number_person_per_floor [L]');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (42, 'Internal gains', 'number', 'text','[]','Q_gain_per_floor', 'Heat gains due to miscellaneous equipment (e.g. lamps, computers...) per floor. For offices, DEFAULT=person_per_floor * 108 + 18 * area_floor; for the remaining building types DEFAULT=4*area_floor [W] ');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (43, 'Wall emissivity', 'number', 'text','[]','emissivity_wall', 'Walls radiation emissivity coefficient. DEFAULT=0.9');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (44, 'Glass emissivity', 'number', 'text','[]','emissivity_glass', 'Windows radiation emissivity coefficient. DEFAULT=0.85');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (45, 'Greenhouse orientation', 'string', 'select','{"options": [{"key": "N", "value": "North"}, {"key": "S", "value": "South"}, {"key": "W", "value": "West"}, {"key": "E", "value": "East"}]}','greenhouse_orientation', 'Greenhouse main facade orientation');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (46, 'Width', 'number', 'text','[]','width', 'Width of greenhouse main facade');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (47, 'Length', 'number', 'text','[]','length', 'Greenhouse length');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (48, 'Height', 'number', 'text','[]','height', 'Greenhouse height');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (49, 'Greenhouse artificial lighting', 'number', 'select','{"options": [{"key": 1, "value": "Has"}, {"key": 0, "value": "Does not have"}]}','artificial_lights_system', 'If the greenhouse has an artificial lighting system or not. If so, it is analyzed  for each day if the plant has the desired daylight hours. It is considered additional heating due to the artifical lighting on the amount of hours lacking, to reach the plant daylight hours. ');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (50, 'Greenhouse efficiency', 'number', 'select','{"options": [{"key": 1, "value": "Tight Cover"}, {"key": 2, "value": "Medium sealing"}, {"key": 3, "value": "Loose Cover"}]}','greenhouse_efficiency', 'Greenhouse air infiltration tightness: 1- Tight cover with low infiltrations; 2 - Medium sealing ; 3 - Leaky cover');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (51, 'Plants daylight hours', 'number', 'text','[]','hours_lights_needed', 'Hours of light the plant needs (accounting with daily solar hours); Taken into account when there is artificial lighting');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (52, 'Fc', 'number', 'text','[]','f_c', 'Characterization factor of tightness of the cover to air infiltration (ref: https://doi.org/10.1016/j.compag.2018.04.025)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (53, 'Leaf area index', 'number', 'text','[]','leaf_area_index', 'Ratio of leaf area per unit ground area. DEFAULT= 1');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (54, 'RH', 'number', 'text','[]','rh_air', 'Average relative humidity in the greenhouse. DEFAULT=80%');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (55, 'U cover', 'number', 'text','[]','u_cover', 'Greenhouse cover thermal conductivity. DEFAULT=6 W/m^2.K');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (56, 'Indoor air speed', 'number', 'text','[]','indoor_air_speed', 'Indoor air velocity. DEFAULT=0.1 m/s');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (57, 'Leaf length', 'number', 'text','[]','leaf_length', 'Characteristic length of the plants leaf. DEFAULT=0.027 m');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (58, 'Tau Cover (long wave radiation )', 'number', 'text','[]','tau_cover_long_wave_radiation', 'Cover transmissivity coefficient to long-wave radiation. DEFAULT=0.3');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (59, 'Emissivity Cover (long wave radiation)', 'number', 'text','[]','emissivity_cover_long_wave_radiation', 'Cover emissivity coefficient to long-wave radiation. DEFAULT=0.2');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (60, 'Tau Cover (solar radiation)', 'number', 'text','[]','tau_cover_solar_radiation', 'Cover transmissivity coefficient to solar radiation. DEFAULT=0.9');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (61, 'Power lights', 'number', 'text','[]','power_lights', 'Lights power per square meter. DEFAULT=20 W/m^2');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (62, 'Thermal blanket', 'number', 'select','{"options": [{"key": 1, "value": "Has"}, {"key": 0, "value": "Does not have"}]}','thermal_blanket', 'If greenhouse has a thermal blanket/curtain being used at night ( thermal blanket u_value = 0.75 W/m^2.K)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (63, 'Supply Temperature', 'number', 'text','[]','supply_temperature', 'Stream supply/initial temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (64, 'Target temperature', 'number', 'text','[]','target_temperature', 'Stream target/final temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (65, 'Fluid', 'string', 'select','{"options": [{"key": "flue_gas", "value": "Flue gas"}, {"key": "air", "value": "Air"}, {"key": "water", "value": "Water"}, {"key": "steam", "value": "Steam"}, {"key": "thermal_oil", "value": "Thermal Oil"}, {"key": "milk", "value": "Milk"}, {"key": "whey_concentrate", "value": "Whey Concentrate"}]}','fluid', 'Fluid name (e.g. flue gas, water, air,..)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (66, 'Mass Flowrate', 'number', 'text','[]','flowrate', 'Mass flowrate. To characterize a stream, introduce Capacity or Mass Flowrate and Cp.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (67, 'Fluid Cp', 'number', 'text','[]','fluid_cp', 'Fluid specific heat capacity. To characterize a stream, introduce Capacity or Mass Flowrate and Cp.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (68, 'Equipment Supply Temperature', 'number', 'text','[]','equipment_supply_temperature', 'Equipment working fluid supply temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (69, 'Open/Closed Loop', 'string', 'select','{"options": [{"key": 0, "value": "Open"}, {"key": 1, "value": "Closed"}]}','open_closed_loop', 'Recirculation (Open) or not (Closed) of the equipment working fluid ');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (70, 'Fuel Type', 'string', 'select','{"options": [{"key": "natural_gas", "value": "Natural gas"}, {"key": "fuel_oil", "value": "Fuel oil"}, {"key": "biomass", "value": "Biomass"}, {"key": "electricity", "value": "Electricity"}]}','fuel_type', 'Equipment fuel type. If you desire to set a specific fuel Price, fill in the field in the ADVANCED PROPERTIES. Otherwise, a value is set according to the EMB3RS database.');

INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (71, 'Equipment Return Temperature', 'number', 'text','[]','equipment_return_temperature', 'Equipment working fluid return temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (72, 'Equipment Supply Capacity', 'number', 'text','[]','supply_capacity', 'Equipment supply capacity');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (73, 'Equipment Efficiency', 'number', 'text','[]','global_conversion_efficiency', 'Equipment efficiency (COP if cooling equipment)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (74, 'Cooling Equipment Type', 'string', 'select','{"options": [{"key": "co2_chiller", "value": "CO2 chiller"}, {"key": "compression_chiller", "value": "Compression Chiller"}, {"key": "cooling_tower", "value": "Cooling Tower"}]}','cooling_equipment_sub_type', 'Cooling equipment type');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (75, 'Burner Equipment Type', 'string', 'select','{"options": [{"key": "direct_burner", "value": "Direct burner"}, {"key": "indirect_burner", "value": "Indirect burner"}]}','burner_equipment_sub_type', 'Burner Equipment Type');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (76, 'Excess Heat Stream Target Temperature', 'number', 'text','[]','burner_excess_heat_target_temperature', 'Burner excess heat stream target temperature (Recoverable exasut stream temperature)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (77, 'Excess Heat Stream flowrate', 'number', 'text','[]','burner_excess_heat_flowrate', 'Burner excess heat stream flowrate (Recoverable exasut stream temperature)');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (78, 'Operation Temperature', 'number', 'text','[]','operation_temperature', 'Process operation temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (79, 'Schedule Type', 'number', 'select','{"options": [{"key": 0, "value": "Continuous"}, {"key": 1, "value": "Batch"}]}','schedule_type', 'Production schedule type');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (80, 'Cycle Time Percentage', 'number', 'text','[]','cycle_time_percentage', 'Batch production time ratio for the startup/outflow/inflow. The percentage gives the initial time duration of startup/inflow, and the outflow duration after the cycle ends. Maintenance is considered during the whole cycle duration.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (81, 'Mass', 'number', 'text','[]','mass', 'Medium/Fluid mass');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (82, 'Capacity', 'number', 'text','[]','maintenance_capacity', 'Power given to a process to compensate for the thermal losses');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (83, 'Initial Temperature', 'number', 'text','[]','initial_temperature', 'Startup medium/fluid initial temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (84, 'Equipment', 'number', 'select','[]','equipment_selected', 'Equipment associated to the process');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (85, 'Capacity', 'number', 'text','[]','capacity', 'Streams capacity. To characterize a stream, introduce Capacity or Mass Flowrate and Cp.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (86, 'Hourly Generation Profile', 'Hourly Generation Profile', 'csv','[]','hourly_generation', 'Hourly capacity profile of the stream. User must provide the profile for each hour in a year.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (87, 'Levelized CO2 emissions', 'number', 'text','[]','levelized_co2_emissions', 'Grid/Source levelized CO2 emissions regarding the heat delivered');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (88, 'Levelized OM Var', 'number', 'text','[]','levelized_om_var', 'Grid/Source levelized variable Operation and Maintenance variable costs regarding the heat delivered');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (89, 'Levelized OM  Fix', 'number', 'text','[]','levelized_om_fix', 'Grid/Source levelized variable Operation and Maintenance fix costs regarding the heat delivered');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (90, 'Source Max Capacity', 'number', 'text','[]','source_max_capacity', 'Existent Source/Sink max supplied/consumed grid capacity');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (91, 'Hourly Profile', 'string', 'csv','[]','hourly_profile', 'Existent Source/Sink hourly profile for supplied/consumed grid capacity');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (92, 'Name', 'string', 'text','[]','name', '');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (93, 'Tarif Consumer Type', 'string', 'select','{"options": [{"key": "household", "value": "household"}, {"key": "non-household", "value": "non-household"}]}','consumer_type', 'Type of consumer. For the simulations,according to the type of consumer, a different tarif of natural gas and electricity is applied.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (94, 'ORC T. Evap', 'number', 'text','[]','orc_t_evap', 'ORC Evaporator Temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (95, 'ORC T. Cond', 'number', 'text','[]','orc_t_cond', 'ORC Condenser Temperature');


INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (96, 'Initial Temperature', 'number', 'text','[]','initial_temperature', 'Outflow Initial Temperature');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (97, 'Steam Boiler Supply Flowrate', 'number', 'text','[]','supply_flowrate', 'Steam Boiler Supply Circuit Flowrate. Only introduce this parameter if you are introducing a steam boiler.');


-- ADD REF SYSTEM -> General
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (98, 'Ref. System - Fuel CO2 emissions', 'number', 'text','[]','ref_system_co2_emissions', 'Reference system Fuel CO2 Emissions. The reference system is the tehcnology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (99, 'Ref. System - Fuel price', 'number', 'text','[]','ref_system_fuel_price', 'Reference system Fuel Price. The reference system is the tehcnology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (100, 'Ref. System - Fuel Type', 'string', 'select','{"options": [{"key": "natural_gas", "value": "Natural gas"}, {"key": "fuel_oil", "value": "Fuel oil"}, {"key": "biomass", "value": "Biomass"}, {"key": "electricity", "value": "Electricity"}, {"key": "none", "value": "None"}]}','ref_system_fuel_type', 'Reference system Fuel Type. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler. If you desire to set a specific fuel Price, fill in the field in the ADVANCED PROPERTIES. Otherwise, a value is set according to the EMB3RS database');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (101, 'Ref. System - Equipment Efficiency', 'number', 'text','[]','ref_system_eff_equipment', 'Reference system Equipment efficiency. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');


-- ADD ORC ELECTRICITY COST
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (102, 'Electricity price', 'number', 'text','[]','ref_system_fuel_price', 'Electricity Price to be utilized in computations');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (103, 'Electricity CO2 emissions','number', 'text','[]','ref_system_fuel_price', 'Electricity CO2 emissions to be utilized in computations');


-- ADD BUILDING REF SYSTEM -> General
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (104, 'HEATING Ref. System - Fuel CO2 emissions', 'number', 'text','[]','ref_system_co2_emissions_heating', 'Reference system Fuel CO2 Emissions. The reference system is the tehcnology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (105, 'HEATING Ref. System - Fuel price', 'number', 'text','[]','ref_system_fuel_price_heating', 'Reference system Fuel Price. The reference system is the tehcnology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (106, 'HEATING Ref. System - Fuel Type', 'string', 'select','{"options": [{"key": "natural_gas", "value": "Natural gas"}, {"key": "fuel_oil", "value": "Fuel oil"}, {"key": "biomass", "value": "Biomass"}, {"key": "electricity", "value": "Electricity"}, {"key": "none", "value": "None"}]}','ref_system_fuel_type_heating', 'Reference system Fuel Type. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler. If you desire to set a specific fuel Price, fill in the field in the ADVANCED PROPERTIES. Otherwise, a value is set according to the EMB3RS database');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (107, 'HEATING Ref. System - Equipment Efficiency', 'number', 'text','[]','ref_system_eff_equipment_heating', 'Reference system Equipment efficiency. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (108, 'COOLING Ref. System - Fuel CO2 emissions', 'number', 'text','[]','ref_system_co2_emissions_space_cooling', 'Reference system Fuel CO2 Emissions. The reference system is the tehcnology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (109, 'COOLING Ref. System - Fuel price', 'number', 'text','[]','ref_system_fuel_price_space_cooling', 'Reference system Fuel Price. The reference system is the tehcnology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (110, 'COOLING Ref. System - Fuel Type', 'string', 'select','{"options": [{"key": "natural_gas", "value": "Natural gas"}, {"key": "fuel_oil", "value": "Fuel oil"}, {"key": "biomass", "value": "Biomass"}, {"key": "electricity", "value": "Electricity"}, {"key": "none", "value": "None"}]}','ref_system_fuel_type_space_cooling', 'Reference system Fuel Type. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler. If you desire to set a specific fuel Price, fill in the field in the ADVANCED PROPERTIES. Otherwise, a value is set according to the EMB3RS database');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (111, 'COOLING Ref. System - Equipment Efficiency', 'number', 'text','[]','ref_system_eff_equipment_space_cooling', 'Reference system Equipment efficiency. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler');


-- REAL DATA
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (112, 'Real Monthly Heating Capacity', 'dict', 'text','[]','real_heating_monthly_capacity', 'EMonthly capacity profile of the stream. User must provide the value for each month.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (113, 'Real Yearly Heating Capacity', 'number', 'text','[]','real_heating_yearly_capacity', 'Yearly capacity profile of the stream. User must provide the yearly value.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (114, 'Real Monthly Cooling Capacity', 'dict', 'text','[]','real_cooling_monthly_capacity', 'Monthly capacity profile of the stream. User must provide the value for each month.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (115, 'Real Yearly Cooling Capacity', 'number', 'text','[]','real_cooling_yearly_capacity', 'Yearly capacity profile of the stream. User must provide the yearly value.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (116, 'Real Hourly Capacity', 'list', 'text','[]','real_hourly_capacity', 'Hourly capacity profile of the stream. User must provide the profile for each hour in the whole year.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (117, 'Real Daily Capacity', 'list', 'text','[]','real_daily_capacity', 'Daily capacity profile of the stream. User must provide the valeu for each day in the whole year.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (118, 'Real Monthly Capacity', 'dict', 'text','[]','real_monthly_capacity', 'Monthly capacity profile of the stream. User must provide ta value for each month.');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (119, 'Real Yearly Capacity', 'number', 'text','[]','real_yearly_capacity', 'Yearly capacity profile of the stream. User must provide the yearly value.');



-- ADD FUEL PRICE AND CO2 EMISSIONS
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (120, 'Fuel Price', 'number', 'text','[]','fuel_price', 'Equipment Fuel Price');
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (121, 'Fuel CO2 Emissions', 'number', 'text','[]','fuel_co2_emissions', 'Equipment Fuel CO2 Emissions');


-- SPECIFIC FOR PINCH
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (122, 'Ref. System - Fuel Type', 'string', 'select','{"options": [{"key": "natural_gas", "value": "Natural gas"}, {"key": "fuel_oil", "value": "Fuel oil"}, {"key": "biomass", "value": "Biomass"}, {"key": "electricity", "value": "Electricity"}, {"key": "none", "value": "Nonel"}]}','ref_system_fuel_type_pinch', 'Reference system Fuel Type. The reference system is the technology currently implemented to heat/cool a stream, e.g. A hot water circuit heated by a natural gas boiler. If OTHER introduce the remaining fields.');

-- INTEREST RATE
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (123, 'Interest Rate', 'number', 'text','[]','interest_rate', 'Interest rate for Business Analysis. DEFAULT=0.04');


-- BOILER
INSERT INTO public.properties(id, name, "dataType", "inputType", data, symbolic_name, description) VALUES (124,'Boiler Type', 'string', 'select','{"options": [{"key": "steam_boiler", "value": "Steam Boiler"}, {"key": "hot_water_boiler", "value": "Hot water boiler"}]}','boiler_equipment_sub_type', 'Boiler type. If steam boiler introduce -> Steam Boiler Supply Flowrate');


SELECT pg_catalog.setval(pg_get_serial_sequence('properties', 'id'), (SELECT MAX(id) FROM properties)+1);
