version: '3'

services:
  nginx:
    image: nginx:alpine
    container_name: embers-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - .:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/certs:/etc/nginx/certs:ro
    networks:
      - embers

  app:
    image: embers/app
    container_name: embers-app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NOVA_USERNAME: '${NOVA_USERNAME}'
        NOVA_PASSWORD: '${NOVA_PASSWORD}'
    volumes:
      - '.:/var/www/html'
    networks:
      - embers
    depends_on:
      - pgsql
      - redis

  pgsql:
    image: 'postgres:13'
    container_name: embers-pgsql
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'emberspgsql:/var/lib/postgresql/data'
    networks:
      - embers
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    container_name: embers-redis
    ports:
      - '6379:6379'
    volumes:
      - 'embersredis:/data'
    networks:
       - embers
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

networks:
  embers:
    driver: bridge

volumes:
  emberspgsql:
    driver: local
  embersredis:
    driver: local

